<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:context="http://www.springframework.org/schema/context" xmlns:clarizen="http://www.mulesoft.org/schema/mule/clarizen" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:debugger="http://www.mulesoft.org/schema/mule/debugger" xmlns:https="http://www.mulesoft.org/schema/mule/https" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="EE-3.3.0" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/clarizen http://www.mulesoft.org/schema/mule/clarizen/1.0/mule-clarizen.xsd 
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd 
http://www.mulesoft.org/schema/mule/debugger http://www.mulesoft.org/schema/mule/debugger/current/mule-debugger.xsd 
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd ">
    <clarizen:config name="Clarizen" connectionUser="${clarizen.user}" connectionPassword="${clarizen.password}" applicationId="${clarizen.appId}" partnerId="${clarizen.partnerId}" doc:name="Clarizen"/>
    <data-mapper:config name="Entity" transformationGraphPath="entity_1.grf" doc:name="Entity"/>
    <context:property-placeholder location="mule.properties"/>
    <flow name="Clarizen_Example_UpdateTask" doc:name="Clarizen_Example_UpdateTask">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8090" path="update-task" doc:name="HTTP"/>
        <clarizen:get-my-work-items config-ref="Clarizen" workItemFilter="ALL" workItemState="ALL" workItemType="TASK" doc:name="Clarizen">
            <clarizen:fields-to-retrieve>
                <clarizen:fields-to-retrieve>Description</clarizen:fields-to-retrieve>
            </clarizen:fields-to-retrieve>
        </clarizen:get-my-work-items>
        <data-mapper:transform config-ref="Entity" doc:name="Data-mapper"/>
        <clarizen:update-work-item config-ref="Clarizen" workItem-ref="#[payload]" doc:name="Clarizen">
            <clarizen:fields-to-update>
                <clarizen:fields-to-update key="Description">NEW TASK_MOD_DESC</clarizen:fields-to-update>
            </clarizen:fields-to-update>
        </clarizen:update-work-item>
        <logger message="Task updated! #[payload.genericEntity.id]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Clarizen_ExampleFlow_Create_WorkItem" doc:name="Clarizen_ExampleFlow_Create_WorkItem">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8090" path="create-work-item" doc:name="HTTP"/>
        <clarizen:get-my-work-items config-ref="Clarizen" workItemFilter="ALL" workItemState="ALL" workItemType="PROJECT" doc:name="Clarizen">
            <clarizen:fields-to-retrieve>
                <clarizen:fields-to-retrieve>Name</clarizen:fields-to-retrieve>
            </clarizen:fields-to-retrieve>
        </clarizen:get-my-work-items>
        <scripting:transformer doc:name="Get Entity">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import com.clarizen.api.GenericEntity
import org.mule.modules.clarizen.api.model.Entity;

return new Entity((GenericEntity) payload.entityList.get(0))]]></scripting:text>
            </scripting:script>
        </scripting:transformer>
        <clarizen:create-work-item config-ref="Clarizen" parentEntity-ref="#[payload]" workItemName="TASK TEST_for_testing" workItemType="TASK" doc:name="Clarizen">
            <clarizen:work-item-fields>
                <clarizen:work-item-field key="Description">DescrTASK</clarizen:work-item-field>
            </clarizen:work-item-fields>
        </clarizen:create-work-item>
        <logger message="Workitem created! #[payload.genericEntity.id]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Clarizen_ExampleFlow_UpdateWorkItem" doc:name="Clarizen_ExampleFlow_UpdateWorkItem">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8090" path="update-workitem" doc:name="HTTP"/>
        <clarizen:get-work-item-by-id config-ref="Clarizen" workItemId="fc62077d-c69b-46eb-91b6-e65de64c1440" workItemType="PROJECT" doc:name="Clarizen">
            <clarizen:fields-to-retrieve>
                <clarizen:fields-to-retrieve>Name</clarizen:fields-to-retrieve>
            </clarizen:fields-to-retrieve>
        </clarizen:get-work-item-by-id>
        <clarizen:update-work-item config-ref="Clarizen" workItem-ref="#[payload]" doc:name="Clarizen">
            <clarizen:fields-to-update>
                <clarizen:fields-to-update key="Description">Project Descrip2</clarizen:fields-to-update>
            </clarizen:fields-to-update>
        </clarizen:update-work-item>
        <logger message="WorkItem updated! #[payload.genericEntity.id]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Clarizen_ExampleFlow_UpdateIssue" doc:name="Clarizen_ExampleFlow_UpdateIssue">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8090" path="create-issue" doc:name="HTTP"/>
        <clarizen:create-case config-ref="Clarizen" title="New issue - for testing - 3" caseType="ISSUE" doc:name="Clarizen">
            <clarizen:case-fields>
                <clarizen:case-field key="Description">Description</clarizen:case-field>
            </clarizen:case-fields>
        </clarizen:create-case>
        <clarizen:update-case config-ref="Clarizen" caseEntity-ref="#[payload]" doc:name="Clarizen">
            <clarizen:fields-to-update>
                <clarizen:fields-to-update key="Description">New test issue - for testing -- 33</clarizen:fields-to-update>
            </clarizen:fields-to-update>
        </clarizen:update-case>
        <logger message="Issue updated!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Clarizen_ExampleFlow_AddResource" doc:name="Clarizen_ExampleFlow_AddResource">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8090" path="add-resource" doc:name="HTTP"/>
        <clarizen:create-entity config-ref="Clarizen" entityType="User" doc:name="Clarizen">
            <clarizen:entity-fields>
                <clarizen:entity-field key="FirstName">test-user-20@user3.com</clarizen:entity-field>
                <clarizen:entity-field key="LastName">test-user-20@user3.com</clarizen:entity-field>
                <clarizen:entity-field key="DisplayName">test-user-20@user3.com</clarizen:entity-field>
                <clarizen:entity-field key="Email">test-user-20@user3.com</clarizen:entity-field>
            </clarizen:entity-fields>
        </clarizen:create-entity>
        <logger message="Created user #[payload.genericEntity.id.value]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="userId" value="#[payload.genericEntity.id.value]" doc:name="UserId"/>
        <clarizen:get-my-work-items config-ref="Clarizen" workItemFilter="ALL" workItemState="ALL" workItemType="ALL" doc:name="Clarizen">
            <clarizen:fields-to-retrieve>
                <clarizen:fields-to-retrieve>Name</clarizen:fields-to-retrieve>
            </clarizen:fields-to-retrieve>
        </clarizen:get-my-work-items>
        <scripting:transformer doc:name="Get Entity">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import com.clarizen.api.GenericEntity
import org.mule.modules.clarizen.api.model.Entity;

return new Entity(payload.entityList.get(0))]]></scripting:text>
            </scripting:script>
        </scripting:transformer>
        <clarizen:add-work-item-resources config-ref="Clarizen" workItem-ref="#[payload]" resourceId="#[flowVars['userId']]" doc:name="Clarizen">
            <clarizen:fields>
                <clarizen:field key="Units">35</clarizen:field>
                <clarizen:field key="Work">#[groovy: new com.clarizen.api.Duration( unit:"MINUTES", value: 10) ]</clarizen:field>
            </clarizen:fields>
        </clarizen:add-work-item-resources>
        <logger message="Resource added!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Clarizen_ExampleFlow_EntityQuery" doc:name="Clarizen_ExampleFlow_EntityQuery">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8090" path="create-entity-query" doc:name="HTTP"/>
        <scripting:component doc:name="Create condition">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.clarizen.api.model.QueryCondition
import com.clarizen.api.queries.*
import com.clarizen.api.ConditionList

return new QueryCondition(
new Or(
	conditions: 
		new ConditionList( condition: [ new Compare(leftExpression: new FieldExpression( fieldName: "Name" ),
													rightExpression: new ConstantExpression ( value: "New Task testing--107" ),
													operator: "CONTAINS" ),
										new Compare(leftExpression: new FieldExpression( fieldName: "Name" ),
													rightExpression: new ConstantExpression ( value: "New Task testing--108" ),
													operator: "CONTAINS" )
									  ])
	)
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <clarizen:entity-query config-ref="Clarizen" queryTypeName="TASK" doc:name="Clarizen">
            <clarizen:fields-to-retrieve>
                <clarizen:fields-to-retrieve>Description</clarizen:fields-to-retrieve>
            </clarizen:fields-to-retrieve>
        </clarizen:entity-query>
        <foreach collection="#[payload.entityList]" doc:name="Foreach">
            <logger message="Entity: #[payload.id]" level="INFO" doc:name="Logger"/>
        </foreach>
    </flow>
    <flow name="Clarizen_ExampleFlow_GetEntityFields" doc:name="Clarizen_ExampleFlow_GetEntityFields">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8090" path="get-entity-fields" doc:name="HTTP"/>
        <scripting:component doc:name="Create condition">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.clarizen.api.model.QueryCondition
import com.clarizen.api.queries.*
import com.clarizen.api.ConditionList

return new QueryCondition(
new Or(
	conditions: 
		new ConditionList( condition: [ new Compare(leftExpression: new FieldExpression( fieldName: "Name" ),
													rightExpression: new ConstantExpression ( value: "New Task testing--107" ),
													operator: "CONTAINS" ),
										new Compare(leftExpression: new FieldExpression( fieldName: "Name" ),
													rightExpression: new ConstantExpression ( value: "New Task testing--108" ),
													operator: "CONTAINS" )
									  ])
	)
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <clarizen:entity-query config-ref="Clarizen" queryTypeName="TASK" condition-ref="#[payload]" doc:name="Clarizen">
            <clarizen:fields-to-retrieve>
                <clarizen:fields-to-retrieve>Name</clarizen:fields-to-retrieve>
                <clarizen:fields-to-retrieve>Description</clarizen:fields-to-retrieve>
            </clarizen:fields-to-retrieve>
        </clarizen:entity-query>
        <foreach collection="#[payload.entityList]" doc:name="Foreach">
            <foreach collection="payload.values.fieldValue" doc:name="Foreach">
                <logger message="The field name is #[groovy:payload.fieldName], the field value is #[groovy:payload.value]" level="INFO" doc:name="Logger"/>
            </foreach>
        </foreach>
    </flow>
    <flow name="Clarizen_ExampleFlow_ListEntities" doc:name="Clarizen_ExampleFlow_ListEntities">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8090" path="list-entities" doc:name="HTTP"/>
        <clarizen:list-entities config-ref="Clarizen" doc:name="Clarizen"/>
        <collection-splitter doc:name="Collection Splitter"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Clarizen_ExampleFlow_DescribeEntity" doc:name="Clarizen_ExampleFlow_DescribeEntity">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8090" path="describe-entities" doc:name="HTTP"/>
        <clarizen:describe-entity config-ref="Clarizen" typeName="TASK" doc:name="Clarizen"/>
        <logger message="The entity typeName is #[payload.entityDescription.typeName]" level="INFO" doc:name="Logger"/>
    </flow>
</mule>
