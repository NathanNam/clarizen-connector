/**
 * Mule Clarizen Cloud Connector
 *
 * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */

/**
 * This file was automatically generated by the Mule Development Kit
 */
package org.mule.modules.clarizen;

import java.util.List;
import java.util.Map;

import org.mule.api.annotations.Configurable;
import org.mule.api.annotations.Module;
import org.mule.api.annotations.Processor;
import org.mule.api.annotations.display.Password;
import org.mule.api.annotations.display.Placement;
import org.mule.api.annotations.lifecycle.Start;
import org.mule.api.annotations.param.Default;
import org.mule.api.annotations.param.Optional;
import org.mule.api.annotations.param.Payload;

import org.mule.modules.clarizen.api.ClarizenClient;
import org.mule.modules.clarizen.api.ClarizenClientFactory;
import org.mule.modules.clarizen.api.model.AllIssueType;
import org.mule.modules.clarizen.api.model.ArrayOfEntity;
import org.mule.modules.clarizen.api.model.Entity;
import org.mule.modules.clarizen.api.model.Login;
import org.mule.modules.clarizen.api.model.Operator;
import org.mule.modules.clarizen.api.model.WorkItemFilter;
import org.mule.modules.clarizen.api.model.WorkItemState;
import org.mule.modules.clarizen.api.model.WorkItemType;

/**
 * Clarizen Cloud Connector
 * 
 * Clarizen project management software is a leading global provider of collaborative 
 * online project management that allows businesses to easily manage all of their projects 
 * and resources in a single environment.
 * 
 * For futher information visit http://www.clarizen.com 
 *
 * @author MuleSoft, Inc.
 */
@Module(name="clarizen")
public class ClarizenConnector
{

    /**
     * Username
     */
    @Configurable
    @Placement(group = "Authentication")
    private String connectionUser;

    /**
     * Password
     */
    @Configurable
    @Placement(group = "Authentication")
    @Password
    private String connectionPassword;
    
    /**
     * Clarizen WS Url
     */
    @Configurable
    @Optional
    @Placement(group = "Connection")
    @Default("http://clarizen.com/api")
    private String clarizenBaseUrl;
    
    /**
     * Clarizen Partner ID
     */
    @Configurable
    @Optional
    @Placement(group = "Connection")
    private String partnerId;
    
    /**
     * Clarizen Application ID
     */
    @Configurable
    @Optional
    @Placement(group = "Connection")
    private String applicationId;
    
    private String sessionId;

    /**
     * ClarizenClient client. Default ClarizenClientImpl.
     */
    private ClarizenClient clarizenClient;
    
    @Start
    public void initialise() {
        if (clarizenClient == null) {
            setClarizenClient(ClarizenClientFactory.getClient());
            setSessionId(login(connectionUser, connectionPassword, applicationId, partnerId).getLoginResult().getSessionId());
        }
    }
    
    /**
     * Login to Clarizen
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:login}
     *
     * @param username           the login user
     * @param password           the login pass
     * @param applicationId      the id of a specific partner application that can be used for licensing purposed
     * @param partnerId          the id of a Clarizen partner
     * 
     * @return the login result with the created user session id
     */
    @Processor
    public Login login(String username, String password, 
                             @Optional String applicationId, @Optional String partnerId) {
        return clarizenClient.login(username, password, applicationId, partnerId);
    }
    
    /**
     * Cleans up an authentication token that was previously created with a call to login
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:logout}
     *
     */
    @Processor
    public void logout() {
        clarizenClient.logout();
    }
    
    /**
     * Retrieve a workitem by id.
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:get-work-item-by-id}
     *
     * @param workItemType      the work item type. For more information about the specific values check {@link WorkItemType}
     * @param workItemId        the work item id
     * @param fieldsToRetrieve  the list of the work item fields to be retrieved. The fields names are the keys of the map
     * 
     * @return The workitem with the fields indicated through fieldToRetrieve
     */
    @Processor
    public Entity getWorkItemById(WorkItemType workItemType, String workItemId, 
                                         @Placement(group = "Fields") List<String> fieldsToRetrieve) {
        return clarizenClient.getWorkItemById(workItemType, workItemId, fieldsToRetrieve);
    }
    
    /**
     * Create a new work item
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:create-work-item}
     *
     * @param parentEntity      represents parent entity to which work item belongs
     * @param workItemType      the work item type. For more information about the specific values check {@link WorkItemType}
     * @param workItemName      the work item name
     * @param workItemFields    the fields to be created. The fields names are the keys of the map.
     * 
     * @return The created work item
     */
    @Processor
    public Entity createWorkItem(Entity parentEntity,
            WorkItemType workItemType, String workItemName,
            @Optional @Placement(group = "Fields") Map<String, Object> workItemFields) {
        return clarizenClient.createWorkItem(parentEntity, workItemType, workItemName, workItemFields);
    }
    

    /**
     * Create a new work item indicating the parent id
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:create-work-item-by-parent-id}
     *
     * @param parentType        represents parent entity type. For more information about the specific values check {@link WorkItemType}
     * @param parentId          represents the parent id
     * @param workItemType      the work item type. For more information about the specific values check {@link WorkItemType}
     * @param workItemName      the work item name
     * @param workItemDescription the work item description
     * @param startDate         the start date of the work item using the format MM-dd-yyy'T'HH:mm:ss
     * 
     * @return The created work item
     */
    @Processor
    public Entity createWorkItemByParentId(WorkItemType parentType,
            String parentId, WorkItemType workItemType, String workItemName,
            @Optional String workItemDescription, @Optional String startDate) {
        return clarizenClient.createWorkItemByParentId(parentType, parentId, workItemType, workItemName, 
                workItemDescription, startDate);
    }
    
    /**
     * Create a new work item with a set of defined fields
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:create-work-item-single-values}
     *
     * @param parentEntity      represents parent entity to which work item belongs
     * @param workItemType      the work item type. For more information about the specific values check {@link WorkItemType}
     * @param workItemName      the work item name
     * @param workItemDescription the work item description
     * @param startDate         the start date of the work item using the format MM-dd-yyy'T'HH:mm:ss
     * 
     * @return The created work item
     */
    @Processor
    public Entity createWorkItemSingleValues(Entity parentEntity,
            WorkItemType workItemType, String workItemName,
            @Optional String workItemDescription, @Optional String startDate) {
        return clarizenClient.createWorkItemSingleValues(parentEntity, workItemType, 
                workItemName, workItemDescription, startDate);
    }
    

    /**
     * Create a new Clarizen entity
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:create-entity}
     *
     * @param entityType        Clarizen entity type
     * @param entityId          entity id
     * @param entityFields      the fields to be created. The fields names are the keys of the map.
     * 
     * @return The created entity
     */
    @Processor
    public Entity createEntity(String entityType, String entityId,
            @Placement(group = "Fields") Map<String, Object> entityFields) {
        return clarizenClient.createEntity(entityType, entityId, entityFields);
    }

    /**
     * Update a work item
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:update-work-item}
     *
     * @param workItem          the work item type. For more information about the specific values check {@link WorkItemType}
     * @param fieldsToUpdate    the fields to be updated. The fields names are the keys of the map
     * 
     * @return The updated work item
     */
    @Processor
    public Entity updateWorkItem(Entity workItem,
            @Placement(group = "Fields") Map<String, Object> fieldsToUpdate) {
        return clarizenClient.updateWorkItem(workItem, fieldsToUpdate);
    }
    
    /**
     * Create a new issue
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:create-all-issue}
     *
     * @param issueType the issue type. the work item type. For more information about the specific values check {@link AllIssueType}
     * @param title     the issue title
     * 
     * @return The created issue
     */
    @Processor
    public Entity createAllIssue(AllIssueType issueType, String title) {
        return clarizenClient.createAllIssue(issueType, title);
    }
    
    /**
     * Update an issue
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:update-all-issue}
     *
     * @param issue             the issue to be updated
     * @param fieldsToUpdate    the fields to be updated. The fields names are the keys of the map
     * 
     * @return The updated issue
     */
    @Processor
    public Entity updateAllIssue(Entity issue,
            @Placement(group = "Fields") Map<String, Object> fieldsToUpdate) {
        return clarizenClient.updateAllIssue(issue, fieldsToUpdate);
    }
    
    /**
     * Search for work items
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:work-items-query}
     *
     * @param fieldsToRetrieve      the fields to be retrieved. The fields names are the keys of the map
     * @param workItemState         the work items state. For more information about the specific values check {@link WorkItemState}
     * @param workItemType          the work item type. For more information about the specific values check {@link WorkItemType}
     * @param workItemFilter        the work items filter. For more information about the specific values check {@link WorkItemFilter} 
     * 
     * @return List of results
     */
    @Processor
    public ArrayOfEntity workItemsQuery(List<String> fieldsToRetrieve, WorkItemState workItemState, 
                                      WorkItemType workItemType, WorkItemFilter workItemFilter) {
        return clarizenClient.workItemsQuery(fieldsToRetrieve, workItemState, workItemType, workItemFilter);
    }
    
    /**
     * Create an entity query
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:create-entity-query}
     *
     * @param fieldsToRetrieve      the fields to be retrieved. The fields names are the keys of the map
     * @param queryTypeName         the entity type
     * @param expression            represents the left side of the query (e.g. "SubmittedBy")
     * @param operator              represents the operator to be used as comparator. For more information about the specific values check {@link Operator}
     * @param conditionValue        the value to be evaluated against the expression
     * 
     * @return List of results
     */
    @Processor
    public ArrayOfEntity createEntityQuery(List<String> fieldsToRetrieve, String queryTypeName, String expression, 
            Operator operator, String conditionValue) {
        return clarizenClient.createEntityQuery(fieldsToRetrieve, queryTypeName, expression, operator, conditionValue);
    }
    
    /**
     * Create an issues query
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:create-issues-query}
     *
     * @param fieldsToRetrieve      the fields to be retrieved. The fields names are the keys of the map
     * @param issueType             the issue type to be retrieved
     * @param expression            represents the left side of the query (e.g. "SubmittedBy")
     * @param operator              represents the operator to be used as comparator. For more information about the specific values check {@link Operator}
     * @param conditionValue        the value to be evaluated against the expression
     * 
     * @return List of results
     */
    @Processor
    public ArrayOfEntity createIssuesQuery(List<String> fieldsToRetrieve, AllIssueType issueType,
            String expression, Operator operator, String conditionValue) {
        return clarizenClient.createIssuesQuery(fieldsToRetrieve, issueType, expression, operator, conditionValue);
    }    
    

    /**
     * Create a new task
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:create-task}
     *
     * @param parentEntity          Represents entity to which work item belongs
     * @param taskName              the task name
     * @param taskDescription       the task description
     * @param taskStartDate         the start date of the task item using the format MM-dd-yyy'T'HH:mm:ss
     * 
     * @return The created work item
     */
    @Processor
    public Entity createTask(@Payload Entity parentEntity,
            String taskName, @Optional String taskDescription, @Optional String taskStartDate) {
        return clarizenClient.createTask(parentEntity, taskName, taskDescription, taskStartDate);
    }

    /**
     * Update a task
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:update-task}
     *
     * @param task              the task to be updated.
     * @param fieldsToUpdate    the fields to be updated. The fields names are the keys of the map
     * 
     * @return The updated task
     */
    @Processor
    public Entity updateTask(Entity task,
            @Placement(group = "Fields") Map<String, Object> fieldsToUpdate) {
        return clarizenClient.updateTask(task, fieldsToUpdate);
    }

    /**
     * Update a task including only a set of defined values
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:update-task-with-single-values}
     *
     * @param task              the task to be updated.
     * @param description       the task description
     * @param percentCompleted  percent of progress completeness correct for current date
     * 
     * @return The updated task
     */
    @Processor
    public Entity updateTaskWithSingleValues(Entity task,
            String description, @Optional String percentCompleted) {
        return clarizenClient.updateTaskWithSingleValues(task, description, percentCompleted);
    }

    /**
     * Update a work item progress
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:update-work-item-progress}
     *
     * @param workItem          the work item to be updated.
     * @param description       the task description
     * @param percentCompleted  percent of progress completeness correct for current date
     * 
     * @return The updated task
     */
    @Processor
    public Entity updateWorkItemProgress(Entity workItem,
            Double percentCompleted) {
        return clarizenClient.updateWorkItemProgress(workItem, percentCompleted);
    }
    
    /**
     * Update a resource to a work item
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:add-work-item-resources}
     *
     * @param workItem          the work item to be updated
     * @param resourceId        the resource id to be added
     * @param units             invested percent of work of specific user. Default value is 100
     * 
     * @return The updated task
     */
    @Processor
    public Entity addWorkItemResources(Entity workItem,
            String resourceId, @Optional String units) {
        return clarizenClient.addWorkItemResources(workItem, resourceId, units);
    }

    /**
     * Returns the work items for the current user
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:get-my-work-items}
     *
     * @param fieldsToRetrieve      the fields to be retrieved. The fields names are the keys of the map
     * @param workItemState         the work items state. For more information about the specific values check {@link WorkItemState}
     * @param workItemType          the work item type. For more information about the specific values check {@link WorkItemType}
     * @param workItemFilter        the work items filter. For more information about the specific values check {@link WorkItemFilter} 
     * 
     * @return List of results
     */
    @Processor
    public ArrayOfEntity getMyWorkItems(List<String> fieldsToRetrieve,
            WorkItemState workItemState, WorkItemType workItemType,
            WorkItemFilter workItemFilter) {
        return clarizenClient.getMyWorkItems(fieldsToRetrieve, workItemState, workItemType, 
                workItemFilter);
    }

    public ClarizenClient getClarizenClient() {
        return clarizenClient;
    }

    public void setClarizenClient(ClarizenClient clarizenClient) {
        this.clarizenClient = clarizenClient;
    }

    public String getSessionId() {
        return sessionId;
    }

    public void setSessionId(String sessionId) {
        this.sessionId = sessionId;
    }

    public String getClarizenBaseUrl() {
        return clarizenBaseUrl;
    }

    public void setClarizenBaseUrl(String clarizenBaseUrl) {
        this.clarizenBaseUrl = clarizenBaseUrl;
    }

    public String getConnectionUser() {
        return connectionUser;
    }

    public void setConnectionUser(String connectionUser) {
        this.connectionUser = connectionUser;
    }

    public String getConnectionPassword() {
        return connectionPassword;
    }

    public void setConnectionPassword(String connectionPassword) {
        this.connectionPassword = connectionPassword;
    }

    public String getPartnerId() {
        return partnerId;
    }

    public void setPartnerId(String partnerId) {
        this.partnerId = partnerId;
    }

    public String getApplicationId() {
        return applicationId;
    }

    public void setApplicationId(String applicationId) {
        this.applicationId = applicationId;
    }
}
