/**
 * Mule Clarizen Cloud Connector
 *
 * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */

/**
 * This file was automatically generated by the Mule Development Kit
 */
package org.mule.modules.clarizen;

import java.util.List;
import java.util.Map;

import org.mule.api.ConnectionException;
import org.mule.api.annotations.Connect;
import org.mule.api.annotations.ConnectionIdentifier;
import org.mule.api.annotations.Connector;
import org.mule.api.annotations.Disconnect;
import org.mule.api.annotations.InvalidateConnectionOn;
import org.mule.api.annotations.Processor;
import org.mule.api.annotations.ValidateConnection;
import org.mule.api.annotations.display.Password;
import org.mule.api.annotations.display.Placement;
import org.mule.api.annotations.param.ConnectionKey;
import org.mule.api.annotations.param.Default;
import org.mule.api.annotations.param.Optional;

import org.mule.modules.clarizen.api.ClarizenClient;
import org.mule.modules.clarizen.api.ClarizenClientFactory;
import org.mule.modules.clarizen.api.model.AllIssueType;
import org.mule.modules.clarizen.api.model.ArrayOfEntity;
import org.mule.modules.clarizen.api.model.Entity;
import org.mule.modules.clarizen.api.model.EntityMetadataDescription;
import org.mule.modules.clarizen.api.model.Login;
import org.mule.modules.clarizen.api.model.QueryCondition;
import org.mule.modules.clarizen.api.model.WorkItemFilter;
import org.mule.modules.clarizen.api.model.WorkItemState;
import org.mule.modules.clarizen.api.model.WorkItemType;

/**
 * Clarizen Cloud Connector
 * 
 * Clarizen project management software is a leading global provider of collaborative 
 * online project management that allows businesses to easily manage all of their projects 
 * and resources in a single environment.
 * 
 * For futher information visit http://www.clarizen.com 
 *
 * @author MuleSoft, Inc.
 */
@Connector(name="clarizen")
public class ClarizenConnector
{

    /**
     * Username
     */
    private String connectionUser;

    /**
     * Password
     */
    private String connectionPassword;
    
    /**
     * Clarizen Partner ID
     */
    private String partnerId;
    
    /**
     * Clarizen Application ID
     */
    private String applicationId;
    
    private String sessionId;

    /**
     * ClarizenClient client. Default ClarizenClientImpl.
     */
    private ClarizenClient clarizenClient;
    
    /**
     * Login to Clarizen
     *
     * @param username           the login user
     * @param password           the login pass
     * @param applicationId      the id of a specific partner application that can be used for licensing purposed
     * @param partnerId          the id of a Clarizen partner
     * 
     * @return {@link Login} Login result with the created user session id
     */
    public Login login(String username, String password, 
                             @Optional String applicationId, @Optional String partnerId) {
        return clarizenClient.login(username, password, applicationId, partnerId);
    }
    
    /**
     * Cleans up an authentication token that was previously created with a call to login
     *
     */
    public void logout() {
        clarizenClient.logout();
    }
    
    /**
     * Retrieve a workitem by id.
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:get-work-item-by-id}
     *
     * @param workItemType      the work item type. For further information about the specific values check {@link WorkItemType}
     * @param workItemId        the work item id
     * @param fieldsToRetrieve  the list of the work item fields to be retrieved. The fields names are the keys of the map
     * 
     * @return {@link Entity} Work item with fields indicated through fieldToRetrieve
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public Entity getWorkItemById(WorkItemType workItemType, String workItemId,  
            @Placement(group = "Fields") List<String> fieldsToRetrieve) {
        return clarizenClient.getWorkItemById(workItemType, workItemId, fieldsToRetrieve);
    }
    
    /**
     * Create a new work item
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:create-work-item}
     *
     * @param parentEntity      represents parent entity to which work item belongs
     * @param workItemType      the work item type. For further information about the specific values check {@link WorkItemType}
     * @param workItemName      the work item name
     * @param workItemFields    the fields to be created. The fields names are the keys of the map.
     * 
     * @return {@link Entity} Created work item
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public Entity createWorkItem(Entity parentEntity,
            WorkItemType workItemType, String workItemName,
            @Optional @Placement(group = "Fields") Map<String, Object> workItemFields) {
        return clarizenClient.createWorkItem(parentEntity, workItemType, workItemName, workItemFields);
    }
    

    /**
     * Create a new work item indicating the parent id
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:create-work-item-by-parent-id}
     *
     * @param parentType        represents parent entity type. For further information about the specific values check {@link WorkItemType}
     * @param parentId          represents the parent id
     * @param workItemType      the work item type. For further information about the specific values check {@link WorkItemType}
     * @param workItemName      the work item name
     * @param workItemDescription the work item description
     * @param startDate         the start date of the work item using the format MM-dd-yyy'T'HH:mm:ss
     * 
     * @return {@link Entity} Created work item
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public Entity createWorkItemByParentId(WorkItemType parentType,
            String parentId, WorkItemType workItemType, String workItemName,
            @Optional String workItemDescription, @Optional String startDate) {
        return clarizenClient.createWorkItemByParentId(parentType, parentId, workItemType, workItemName, 
                workItemDescription, startDate);
    }
    
    /**
     * Create a new work item with a set of defined fields
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:create-work-item-single-values}
     *
     * @param parentEntity      represents parent entity to which work item belongs
     * @param workItemType      the work item type. For further information about the specific values check {@link WorkItemType}
     * @param workItemName      the work item name
     * @param workItemDescription the work item description
     * @param startDate         the start date of the work item using the format MM-dd-yyy'T'HH:mm:ss
     * 
     * @return {@link Entity} Created work item
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public Entity createWorkItemSingleValues(Entity parentEntity,
            WorkItemType workItemType, String workItemName,
            @Optional String workItemDescription, @Optional String startDate) {
        return clarizenClient.createWorkItemSingleValues(parentEntity, workItemType, 
                workItemName, workItemDescription, startDate);
    }
    

    /**
     * Create a new Clarizen entity
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:create-entity}
     *
     * @param entityType        Clarizen entity type
     * @param entityId          entity id
     * @param entityFields      the fields to be created. The fields names are the keys of the map.
     * 
     * @return {@link Entity} Created entity
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public Entity createEntity(String entityType, @Optional String entityId,
            @Placement(group = "Fields") Map<String, Object> entityFields) {
        return clarizenClient.createEntity(entityType, entityId, entityFields);
    }

    /**
     * Update a work item
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:update-work-item}
     *
     * @param workItem          the work item type. For further information about the specific values check {@link WorkItemType}
     * @param fieldsToUpdate    the fields to be updated. The fields names are the keys of the map
     * 
     * @return {@link Entity} Updated work item
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public Entity updateWorkItem(Entity workItem,
            @Placement(group = "Fields") Map<String, Object> fieldsToUpdate) {
        return clarizenClient.updateWorkItem(workItem, fieldsToUpdate);
    }
    
    /**
     * Create a new issue
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:create-case}
     *
     * @param caseType  the case type. For further information about the specific values check {@link AllIssueType}
     * @param title     the case title
     * @param caseFields the fields to be created. The fields names are the keys of the map.
     * 
     * @return {@link Entity} Created case
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public Entity createCase(AllIssueType caseType, String title,
            @Optional @Placement(group = "Fields") Map<String, Object> caseFields) {
        return clarizenClient.createCase(caseType, title, caseFields);
    }
    
    /**
     * Update an issue
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:update-case}
     *
     * @param caseEntity        the case to be updated
     * @param fieldsToUpdate    the fields to be updated. The fields names are the keys of the map
     * 
     * @return {@link Entity} Updated case
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public Entity updateCase(Entity caseEntity,
            @Placement(group = "Fields") Map<String, Object> fieldsToUpdate) {
        return clarizenClient.updateCase(caseEntity, fieldsToUpdate);
    }
    
    /**
     * Search for work items
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:work-items-query}
     *
     * @param fieldsToRetrieve      the fields to be retrieved. The fields names are the keys of the map
     * @param workItemState         the work items state. For further information about the specific values check {@link WorkItemState}
     * @param workItemType          the work item type. For further information about the specific values check {@link WorkItemType}
     * @param workItemFilter        the work items filter. For further information about the specific values check {@link WorkItemFilter}
     * @param pageSize              the number of results to be retrieved per page
     * 
     * @return {@link ArrayOfEntity} List of work item results
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public ArrayOfEntity workItemsQuery(@Placement(group = "Fields") List<String> fieldsToRetrieve, 
            WorkItemState workItemState, WorkItemType workItemType, WorkItemFilter workItemFilter, @Optional @Default("1000") Integer pageSize) {
        return clarizenClient.workItemsQuery(fieldsToRetrieve, workItemState, workItemType, workItemFilter, pageSize);
    }
    
    /**
     * Create an entity query
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:entity-query}
     *
     * @param fieldsToRetrieve      the fields to be retrieved. The fields names are the keys of the map
     * @param queryTypeName         the entity type
     * @param condition             the query condition. For further information about the condition object check {@link QueryCondition}
     * @param pageSize              the number of results to be retrieved per page
     * 
     * @return {@link ArrayOfEntity} List of work item results
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public ArrayOfEntity entityQuery(@Placement(group = "Fields") List<String> fieldsToRetrieve, 
            String queryTypeName, @Optional @Default("#[payload:]") QueryCondition condition, @Optional @Default("1000") Integer pageSize) {
        return clarizenClient.createEntityQuery(fieldsToRetrieve, queryTypeName, condition, pageSize);
    }
    
    /**
     * Create an issues query
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:issue-query}
     *
     * @param fieldsToRetrieve      the fields to be retrieved. The fields names are the keys of the map
     * @param issueType             the issue type to be retrieved
     * @param condition             the query condition. For further information about the condition object check {@link QueryCondition}
     * @param pageSize              the number of results to be retrieved per page.
     * @return {@link ArrayOfEntity} List of issues results
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public ArrayOfEntity issueQuery(@Placement(group = "Fields") List<String> fieldsToRetrieve, AllIssueType issueType,
            @Optional @Default("#[payload:]") QueryCondition condition, @Optional @Default("1000") Integer pageSize) {
        return clarizenClient.createIssuesQuery(fieldsToRetrieve, issueType, condition, pageSize);
    }

    /**
     * Update a work item progress
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:update-work-item-progress}
     *
     * @param workItem          the work item to be updated.
     * @param description       the task description
     * @param percentCompleted  percent of progress completeness correct for current date
     * 
     * @return {@link Entity} Updated work item
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public Entity updateWorkItemProgress(Entity workItem,
            Double percentCompleted) {
        return clarizenClient.updateWorkItemProgress(workItem, percentCompleted);
    }
    
    /**
     * Update a resource to a work item
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:add-work-item-resources}
     *
     * @param workItem          the work item to be updated
     * @param resourceId        the resource id to be added
     * @param fields            the fields to be created. The fields names are the keys of the map.
     * 
     * @return {@link Entity} Updated work item
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public Entity addWorkItemResources(Entity workItem,
            String resourceId, @Placement(group = "Fields") Map<String, Object> fields) {
        return clarizenClient.addWorkItemResources(workItem, resourceId, fields);
    }

    /**
     * Returns the work items for the current user
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:get-my-work-items}
     *
     * @param fieldsToRetrieve      the fields to be retrieved. The fields names are the keys of the map
     * @param workItemState         the work items state. For further information about the specific values check {@link WorkItemState}
     * @param workItemType          the work item type. For further information about the specific values check {@link WorkItemType}
     * @param workItemFilter        the work items filter. For further information about the specific values check {@link WorkItemFilter} 
     * @param pageSize              the number of results to be retrieved per page
     * @return {@link ArrayOfEntity} List of work items
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public ArrayOfEntity getMyWorkItems(@Placement(group = "Fields") List<String> fieldsToRetrieve,
            WorkItemState workItemState, WorkItemType workItemType,
            WorkItemFilter workItemFilter, @Optional @Default("1000") Integer pageSize) {
        return clarizenClient.getMyWorkItems(fieldsToRetrieve, workItemState, workItemType, 
                workItemFilter, pageSize);
    }

    /**
     * Returns the description of an entity
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:describe-entity}
     *
     * @param typeName          entity type to be described
     * @return {@link EntityMetadataDescription} Entity description
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public EntityMetadataDescription describeEntity(String typeName) {
        return clarizenClient.describeEntity(typeName);
    }
    
    /**
     * Returns the list of entities
     * 
     * <p/>
     * {@sample.xml ../../../doc/clarizen-connector.xml.sample clarizen:list-entities}
     *
     * @return List of entities
     */
    @Processor
    @InvalidateConnectionOn(exception = ClarizenSessionTimeoutException.class)
    public List<String> listEntities() {
        return clarizenClient.listEntities();
    }
    
    public ClarizenClient getClarizenClient() {
        return clarizenClient;
    }

    public void setClarizenClient(ClarizenClient clarizenClient) {
        this.clarizenClient = clarizenClient;
    }

    public String getSessionId() {
        return sessionId;
    }

    public void setSessionId(String sessionId) {
        this.sessionId = sessionId;
    }

    public String getConnectionUser() {
        return connectionUser;
    }

    public void setConnectionUser(String connectionUser) {
        this.connectionUser = connectionUser;
    }

    public String getConnectionPassword() {
        return connectionPassword;
    }

    public void setConnectionPassword(String connectionPassword) {
        this.connectionPassword = connectionPassword;
    }

    public String getPartnerId() {
        return partnerId;
    }

    public void setPartnerId(String partnerId) {
        this.partnerId = partnerId;
    }

    public String getApplicationId() {
        return applicationId;
    }

    public void setApplicationId(String applicationId) {
        this.applicationId = applicationId;
    }
    
    /**
     * Performs a connection to Clarizen by making a login call with the given credentials.
     * 
     * @param connectionUser     the user login user
     * @param connectionPassword the user login pass
     * @param applicationId      the id of a specific partner application that can be used for licensing purposed
     * @param partnerId          the id of a Clarizen partner
     * 
     */
    @Connect
    public void connect(@ConnectionKey String connectionUser, 
                        @Password String connectionPassword, 
                        @Optional String applicationId, 
                        @Optional String partnerId) throws ConnectionException {
        this.connectionUser = connectionUser;
        this.connectionPassword = connectionPassword;
        
        if (clarizenClient == null) {
            setClarizenClient(ClarizenClientFactory.getClient());
        }
        
        setSessionId(login(connectionUser, connectionPassword, applicationId, partnerId).getLoginResult().getSessionId());
    }

    /**
     * Performs a logout call.
     */
    @Disconnect
    public void disconnect() {
        if (sessionId != null) {
            clarizenClient = null;
            sessionId = null;
            logout();
        }
    }

    /**
     * Returns whether the current user is authenticated.
     * It does not mean tell anything whether the current session has expired
     */
    @ValidateConnection
    public boolean validateConnection() {
        return sessionId != null;
    }

    /**
     * Returns a connection identifier.
     */
    @Override
    @ConnectionIdentifier
    public String toString() {
        return "username='" + connectionUser + '\'' +
                '}';
    }
}
